import os

Import('env')

# copy parent environment so our alterations don't affect it
env = env.Clone()

# add src dirs to include path
# initilize the set of targets to build

matches = []

for root, dirnames, filenames in os.walk('../src'):
    for dirname in dirnames:
        dir_path = os.path.join(root, dirname)
        glob_str = '%s/*.c*' % dir_path
        matches.append(Glob(glob_str))

print('adding src dir to path: src')
env.Append(CPPPATH=['../src'])

# add any files in the current directory
for root, dirnames, filenames in os.walk('.'):
    for dirname in dirnames:
        dir_path = os.path.join(root, dirname)
        glob_str = '%s/*.c*' % dir_path
        matches.append(Glob(glob_str))

print('adding test dir to path: .')
env.Append(CPPPATH=['.'])
matches.append(Glob('./*.c*'))

# debug output
print('test env CPPPATH:')
print(env['CPPPATH'])

# build a program that uses the source files as a shared library
env.Program('../bin/test_main', matches)
